


# BitsDraw

## 🎯 目的
- U8G2用のビットマップ表示データ（`.h`ファイル形式）を直接生成するWebベースのエディタ。
- 既存のimage2cppの手間を省き、リアルタイムでの描画・反転・拡大表示を可能にする。

---

## 🏗️ 機能一覧

### 基本機能
- ビットマップ編集UI
  - マウス操作での鉛筆ツール（1ドット編集）
  - バケツツール（塗りつぶし）
  - ドットのオンオフ切り替え
- 拡大表示（1倍・2倍・4倍）
- 反転表示
- `.h`ファイル形式のテキスト出力（コピー対応）
- プロジェクト名やイメージ名の編集
画像サイズの変更 (許すなら分割も対応 imgset)

逆に.hのコピペでエディタに表示もしたい。


### 拡張機能（将来のフェーズで追加予定）
- PNGビットマップの変換機能
- U8G2用フォントの編集（グリフ単位の管理）
- 出力ファイルの保存（ファイルとして落とす、Zip化など）

---

## 🛠️ 技術スタック

- HTML5 + CSS3
- JavaScript / TypeScript（フレームワークは不要。必要ならReact/Vueでも対応可）
- Canvas API（ビットマップ編集・プレビュー）
- File API（出力のコピー/保存）
- Web Workers（必要に応じて。画像変換など負荷高い処理用）

---

## 🧩 データ構造

```javascript
const bitmap = {
  width: 128,
  height: 64,
  pixels: [ // 2次元配列。1:黒, 0:白
    [0, 1, 0, 0, ...],
    ...
  ]
}

	•	反転表示は表示レイヤーのみで処理。pixels配列は常に「黒が1, 白が0」で統一する。

⸻

🔨 実装フェーズ

フェーズ1（MVP）
	•	Canvas編集UI
	•	鉛筆ツール
	•	.h出力（コピー対応）
	•	拡大表示
	•	反転表示（データ反転ではなく、プレビューのみ）

フェーズ2（拡張）
	•	バケツツール
	•	PNGビットマップ変換機能（PNGドラッグ&ドロップ対応）
	•	イメージのロード/保存機能（localStorage or ファイル）

フェーズ3（高度化）
	•	U8G2フォントエディタ（BDF相当の管理）
	•	Node.js連携API（もしPNG→Bitmap変換などを高速化するなら）
	•	Web Workersによる変換処理の分離

⸻

📦 出力例

const unsigned char my_bitmap[] PROGMEM = {
  0xFF, 0x81, 0x81, 0xFF
};

	•	ユーザーが「テキストコピー」ボタンを押すことで.h用データを取得可能にする。

⸻



⸻

🗂️ ディレクトリ構成案

/web-bitmap-editor
  ├── index.html
  ├── main.js
  ├── style.css
  ├── /assets
  │     ├── icons.svg
  │     └── logo.png
  ├── /utils
  │     ├── bitmap.js
  │     └── export.js
  ├── README.md
  └── plan.md


⸻

⚠️ 注意点
	•	.h出力は「U8G2のビット順（LSB/MSB順）」に注意する。
	•	反転表示はエディタ上のプレビューのみ。出力する.hは常に黒が1。
	•	フォント化（BDF管理）やPNGアルファ対応などは拡張性を意識して設計する。

⸻

✏️ 次のアクション
	•	フェーズ1のCanvasエディタUI設計から着手。
	•	UI/機能スケッチを作って試作 → 進行中に修正を加える方針。

